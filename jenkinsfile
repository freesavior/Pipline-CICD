pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Récupérer le code source depuis le dépôt GitHub
                git branch: 'main', url: 'https://github.com/freesavior/Pipline-CICD.git'
            }
        }

        stage('Build') {
            steps {
                // Construire l'image Docker
                script {
                    docker.build("python-app:latest", "--build-arg PYTHON_VERSION=3.9 .")
                }
            }
        }

        stage('Test') {
            steps {
                // Exécuter les tests unitaires
                sh 'docker run --rm python-app:latest python -m unittest discover'
            }
        }

        stage('Push to Docker Registry') {
            steps {
                // Poussez l'image Docker vers un registre
                withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    sh 'docker tag python-app:latest python-app-registry/python-app:latest'
                    sh 'docker push python-app-registry/python-app:latest'
                }
            }
        }

        stage('Deploy to Minikube') {
            steps {
                // Déployer l'application sur Minikube en utilisant ArgoCD
                sh 'kubectl apply -f deployment.yaml'
                
            }
        }
    }
}
